{"version":3,"sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/js/utils/dom.js","../src/js/utils/constants.js","../src/js/utils/helpers.js","../src/js/utils/draw-utils.js","../src/js/utils/colors.js","../src/js/utils/draw.js","../src/js/utils/animate.js","../src/js/utils/animation.js","../src/js/utils/export.js","../src/js/utils/date-utils.js","../src/js/objects/ChartComponents.js","../src/js/utils/intervals.js","../src/js/utils/axis-chart-utils.js","../src/js/chart.js","../src/js/objects/SvgTip.js","../src/css/chartsCss.js","../src/js/charts/BaseChart.js","../src/js/charts/AggregationChart.js","../src/js/charts/PercentageChart.js","../src/js/charts/PieChart.js","../src/js/charts/Heatmap.js","../src/js/charts/AxisChart.js","../src/js/charts/DonutChart.js","src/newchart.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","$","expr","con","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isHidden","el","offsetParent","isElementInViewport","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","properties","evt","createEvent","initEvent","j","dispatchEvent","getTopOffset","m","titleHeight","margins","paddings","getLeftOffset","getExtraHeight","legendHeight","getExtraWidth","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","isValidNumber","candidate","nonNegative","Number","isNaN","undefined","isFinite","round","deepClone","cloned","value","key","Date","getTime","isArray","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","slice","shortenLargeNumber","label","number","p","floor","log10","l","shortened","pow","getSplineCurvePointsStr","xList","yList","points","i","push","line","pointA","pointB","lengthX","lengthY","sqrt","atan2","controlPoint","current","previous","next","reverse","o","PI","command","reduce","acc","point","a","cps","cpe","limitColor","r","lightenDarkenColor","color","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","RGB_RE","test","createSVG","tag","createElementNS","val","parentNode","keys","map","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","transform","args","inside","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","largeArc","arcStartX","x","arcStartY","arcEndX","arcEndY","makeCircleStr","midArc","makeArcStrokePathStr","makeStrokeCircleStr","makeGradient","lighter","gradientDef","opacities","percentageBar","depth","PERCENTAGE_BAR_DEFAULT_DEPTH","heatSquare","size","data","legendBar","LABEL_MAX_CHARS","text","FONT_SIZE","FONT_FILL","group","legendDot","makeText","content","options","fontSize","dy","textAnchor","makeVertLine","y1","y2","stroke","BASE_LINE_COLOR","LABEL_MARGIN","makeHoriLine","x1","x2","lineType","shortenNumbers","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelPos","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","datasetDot","dot","getPaths","pointsStr","join","spline","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","translate","unit","oldCoord","newCoord","duration","old","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","downloadFile","filename","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","prepareForExport","svg","clone","classList","add","styleEl","create","CSSTEXT","container","innerHTML","treatAsUtc","date","result","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","areInSameMonth","getMonthName","short","monthName","MONTH_NAMES","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","normalize","mantissa","exponent","sig","exp","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","getClosestInArray","goal","arr","closest","prev","curr","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedSpace","allowedLetters","DEFAULT_CHAR_WIDTH","seriesMultiple","maxLabelLength","getChartByType","AxisChart","chartTypes","error","BASE_MEASURES","INIT_CHART_UPDATE_TIMEOUT","CHART_POST_ANIMATE_TIMEOUT","DEFAULT_AXIS_CHART_TYPE","AXIS_LEGEND_BAR_SIZE","BAR_CHART_SPACE_RATIO","MIN_BAR_PERCENT_HEIGHT","LINE_CHART_DOT_SIZE","DOT_OVERLAY_SIZE_INCR","PERCENTAGE_BAR_DEFAULT_HEIGHT","HEATMAP_DISTRIBUTION_SIZE","HEATMAP_SQUARE_SIZE","HEATMAP_GUTTER_SIZE","TOOLTIP_POINTER_TRIANGLE_HEIGHT","DEFAULT_CHART_COLORS","HEATMAP_COLORS_GREEN","DEFAULT_COLORS","FULL_ANGLE","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","this","hideTip","title","dataPointList","addEventListener","set","_this2","formatted","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","PRESET_COLOR_MAP","exec","c","ch","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","BaseChart","HTMLElement","Error","rawChartArgs","prepareData","prepareFirstData","validateColors","isNavigable","animate","truncateLegends","measures","JSON","parse","stringify","setMeasures","showLegend","argHeight","baseHeight","state","initTimeout","overlays","configure","validColors","forEach","warn","boundDrawFn","_this","draw","ResizeObserver","resizeObserver","observe","disconnect","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","components","drawArea","render","update","renderLegend","setupNavigation","baseWidth","titleEL","titleFontSize","legendArea","updateTipOffset","Map","make","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","chartSvg","AggregationChart","formatTooltipY","tooltipOptions","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","sumOfRemaining","grandTotal","textContent","legendTotals","barWidth","divisor","_this3","NO_OF_YEAR_MONTHS","DAY_NAMES_SHORT","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","sliceStrings","strokeWidth","transition","newData","xPositions","widths","barHeight","barDepth","positions","position","newPos","newLabels","oldPos","oldLabels","calcLabels","_this5","newOptions","startPos","endPos","_this6","newStarts","oldStarts","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","yyyyMmDd","dataValue","square","unitType","units","yPositions","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PercentageChart","barOptions","component","xPos","bars","get","gOff","pOff","formattedLabels","fraction","setValues","showTip","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","COL_WIDTH","ROW_HEIGHT","Heatmap","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","spacing","noOfWeeks","setFullYear","dataPoints","timestampSec","firstWeekStart","domainConfigs","getDomains","lessCol","dayName","dayText","daySquares","comp","daySquare","dateParts","lessText","moreText","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","lineOptions","axisOptions","xAxisMode","yAxisMode","xIsSeries","shortenYAxisNumbers","formatTooltipX","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","replace","char","stacked","yExtremes","cumulativeYPos","cumulative","allValueLists","barDatasets","lineDatasets","barsConfigs","spaceRatio","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","relX","relY","mapTooltipXPosition","dbi","yExtreme","formattedLabel","overlayGuides","currentIndex","currentUnit","_this7","setCurrentDataPoint","_this9","_this10","getDataPoint","datasetValues","splice","DonutChart","Chart","require","_frappeChartsMin","_typeof","obj","Symbol","iterator","constructor","prototype","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","arguments","apply","jsonQueryBirth","jsonQueryDeath","chartData","chart","showData","_showData","_callee","queryString","areaCode","url1","res2","data2","area","res","data1","data3","_callee$","_context","URLSearchParams","location","search","replaceAll","fetch","json","variables","mun","valueTexts","query","selection","headers","ok","dimension","Vuosi","category","bundleURL","getBundleURLCached","getBundleURL","matches","stack","match","getBaseURL","bundle","updateLink","link","newLink","onload","remove","now","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","module"],"mappings":"AyBAA,ACAA,IDAIi+B,ACAAO,MAAM,GDAG,ACAA1K,GDAG,IAAI,ACAA,CAAC,cAAc,CAAC;ADCpC,ACCA,SDDSoK,ACCAO,UAAUA,CAACC,IAAI,EAAE,CDDCR,CAAA,EAAG;ADD9BpK,ECEE,ACCA,IDDI,ACCA6K,CDDCV,ADFP,MEGa,GDDG,ACCAS,EDDE,ECCE,CAAC1qB,SAAS,CAAC,CAAC;AFFhC,EEGE2qB,EDDEV,ADFJlK,KEGS,CAAC6K,GDDG,GAAGT,ACCA,GAAG,CFHnB,GAAArK,KCE4B,CAAC,CAAC,ADF9B,CEG+B;AFHkC,ECG/D,ECCE4K,IAAI,CAACG,AFJwD7K,MEIlD,CAAC,CAAC,AFJgDC,GAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,GAAA,kBAAAA,GAAA,gBAAAA,GAAA,WAAAA,GAAA,yBAAAC,MAAA,IAAAD,GAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,GAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,GAAA,KAAAD,OAAA,CAAAC,GAAA;AAAA,ECK/D,ACAA,CAAC,MDAMgK,ADLwD3J,SCK/C,WDL+C,kBAAjE,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,OAAA,SAAAA,OAAA,OAAAC,EAAA,GAAAnb,MAAA,CAAAgb,SAAA,EAAAI,MAAA,GAAAD,EAAA,CAAAE,cAAA,EAAAC,cAAA,GAAAtb,MAAA,CAAAsb,cAAA,cAAAV,GAAA,EAAA9tB,GAAA,EAAAyuB,IAAA,IAAAX,GAAA,CAAA9tB,GAAA,IAAAyuB,IAAA,CAAA1uB,KAAA,KAAA2uB,OAAA,wBAAAX,MAAA,GAAAA,MAAA,OAAAY,cAAA,GAAAD,OAAA,CAAAV,QAAA,kBAAAY,mBAAA,GAAAF,OAAA,CAAAG,aAAA,uBAAAC,iBAAA,GAAAJ,OAAA,CAAAK,WAAA,8BAAAC,OAAAlB,GAAA,EAAA9tB,GAAA,EAAAD,KAAA,WAAAmT,MAAA,CAAAsb,cAAA,CAAAV,GAAA,EAAA9tB,GAAA,IAAAD,KAAA,EAAAA,KAAA,EAAAkvB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAArB,GAAA,CAAA9tB,GAAA,WAAAgvB,MAAA,mBAAAI,GAAA,IAAAJ,MAAA,YAAAA,OAAAlB,GAAA,EAAA9tB,GAAA,EAAAD,KAAA,WAAA+tB,GAAA,CAAA9tB,GAAA,IAAAD,KAAA,gBAAAsvB,KAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,QAAAC,cAAA,GAAAH,OAAA,IAAAA,OAAA,CAAArB,SAAA,YAAAyB,SAAA,GAAAJ,OAAA,GAAAI,SAAA,EAAAC,SAAA,GAAA1c,MAAA,CAAA7C,MAAA,CAAAqf,cAAA,CAAAxB,SAAA,GAAA2B,OAAA,OAAAC,OAAA,CAAAL,WAAA,gBAAAjB,cAAA,CAAAoB,SAAA,eAAA7vB,KAAA,EAAAgwB,gBAAA,CAAAT,OAAA,EAAAE,IAAA,EAAAK,OAAA,MAAAD,SAAA,aAAAI,SAAAC,EAAA,EAAAnC,GAAA,EAAAoC,GAAA,mBAAA51B,IAAA,YAAA41B,GAAA,EAAAD,EAAA,CAAAE,IAAA,CAAArC,GAAA,EAAAoC,GAAA,cAAAd,GAAA,aAAA90B,IAAA,WAAA41B,GAAA,EAAAd,GAAA,QAAAhB,OAAA,CAAAiB,IAAA,GAAAA,IAAA,MAAAe,gBAAA,gBAAAT,UAAA,cAAAU,kBAAA,cAAAC,2BAAA,SAAAC,iBAAA,OAAAvB,MAAA,CAAAuB,iBAAA,EAAA5B,cAAA,qCAAA6B,QAAA,GAAAtd,MAAA,CAAAud,cAAA,EAAAC,uBAAA,GAAAF,QAAA,IAAAA,QAAA,CAAAA,QAAA,CAAA1b,MAAA,QAAA4b,uBAAA,IAAAA,uBAAA,KAAArC,EAAA,IAAAC,MAAA,CAAA6B,IAAA,CAAAO,uBAAA,EAAA/B,cAAA,MAAA4B,iBAAA,GAAAG,uBAAA,OAAAC,EAAA,GAAAL,0BAAA,CAAApC,SAAA,GAAAyB,SAAA,CAAAzB,SAAA,GAAAhb,MAAA,CAAA7C,MAAA,CAAAkgB,iBAAA,YAAAK,sBAAA1C,SAAA,gCAAA7Q,OAAA,WAAAwT,MAAA,IAAA7B,MAAA,CAAAd,SAAA,EAAA2C,MAAA,YAAAX,GAAA,gBAAAY,OAAA,CAAAD,MAAA,EAAAX,GAAA,sBAAAa,cAAAnB,SAAA,EAAAoB,WAAA,aAAAC,OAAAJ,MAAA,EAAAX,GAAA,EAAAgB,OAAA,EAAAC,MAAA,QAAAC,MAAA,GAAApB,QAAA,CAAAJ,SAAA,CAAAiB,MAAA,GAAAjB,SAAA,EAAAM,GAAA,mBAAAkB,MAAA,CAAA92B,IAAA,QAAAqW,MAAA,GAAAygB,MAAA,CAAAlB,GAAA,EAAAnwB,KAAA,GAAA4Q,MAAA,CAAA5Q,KAAA,SAAAA,KAAA,gBAAA8tB,OAAA,CAAA9tB,KAAA,KAAAuuB,MAAA,CAAA6B,IAAA,CAAApwB,KAAA,eAAAixB,WAAA,CAAAE,OAAA,CAAAnxB,KAAA,CAAAsxB,OAAA,EAAAC,IAAA,WAAAvxB,KAAA,IAAAkxB,MAAA,SAAAlxB,KAAA,EAAAmxB,OAAA,EAAAC,MAAA,gBAAA/B,GAAA,IAAA6B,MAAA,UAAA7B,GAAA,EAAA8B,OAAA,EAAAC,MAAA,QAAAH,WAAA,CAAAE,OAAA,CAAAnxB,KAAA,EAAAuxB,IAAA,WAAAC,SAAA,IAAA5gB,MAAA,CAAA5Q,KAAA,GAAAwxB,SAAA,EAAAL,OAAA,CAAAvgB,MAAA,gBAAA2H,KAAA,WAAA2Y,MAAA,UAAA3Y,KAAA,EAAA4Y,OAAA,EAAAC,MAAA,SAAAA,MAAA,CAAAC,MAAA,CAAAlB,GAAA,SAAAsB,eAAA,EAAAhD,cAAA,oBAAAzuB,KAAA,WAAAA,MAAA8wB,MAAA,EAAAX,GAAA,aAAAuB,2BAAA,eAAAT,WAAA,WAAAE,OAAA,EAAAC,MAAA,IAAAF,MAAA,CAAAJ,MAAA,EAAAX,GAAA,EAAAgB,OAAA,EAAAC,MAAA,gBAAAK,eAAA,GAAAA,eAAA,GAAAA,eAAA,CAAAF,IAAA,CAAAG,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA1B,iBAAAT,OAAA,EAAAE,IAAA,EAAAK,OAAA,QAAA7S,KAAA,sCAAA6T,MAAA,EAAAX,GAAA,wBAAAlT,KAAA,YAAAhB,KAAA,sDAAAgB,KAAA,oBAAA6T,MAAA,QAAAX,GAAA,SAAAwB,UAAA,WAAA7B,OAAA,CAAAgB,MAAA,GAAAA,MAAA,EAAAhB,OAAA,CAAAK,GAAA,GAAAA,GAAA,UAAAyB,QAAA,GAAA9B,OAAA,CAAA8B,QAAA,MAAAA,QAAA,QAAAC,cAAA,GAAAC,mBAAA,CAAAF,QAAA,EAAA9B,OAAA,OAAA+B,cAAA,QAAAA,cAAA,KAAAxB,gBAAA,mBAAAwB,cAAA,qBAAA/B,OAAA,CAAAgB,MAAA,EAAAhB,OAAA,CAAAiC,IAAA,GAAAjC,OAAA,CAAAkC,KAAA,GAAAlC,OAAA,CAAAK,GAAA,sBAAAL,OAAA,CAAAgB,MAAA,6BAAA7T,KAAA,QAAAA,KAAA,gBAAA6S,OAAA,CAAAK,GAAA,EAAAL,OAAA,CAAAmC,iBAAA,CAAAnC,OAAA,CAAAK,GAAA,uBAAAL,OAAA,CAAAgB,MAAA,IAAAhB,OAAA,CAAAoC,MAAA,WAAApC,OAAA,CAAAK,GAAA,GAAAlT,KAAA,oBAAAoU,MAAA,GAAApB,QAAA,CAAAV,OAAA,EAAAE,IAAA,EAAAK,OAAA,oBAAAuB,MAAA,CAAA92B,IAAA,QAAA0iB,KAAA,GAAA6S,OAAA,CAAAqC,IAAA,mCAAAd,MAAA,CAAAlB,GAAA,KAAAE,gBAAA,qBAAArwB,KAAA,EAAAqxB,MAAA,CAAAlB,GAAA,EAAAgC,IAAA,EAAArC,OAAA,CAAAqC,IAAA,kBAAAd,MAAA,CAAA92B,IAAA,KAAA0iB,KAAA,gBAAA6S,OAAA,CAAAgB,MAAA,YAAAhB,OAAA,CAAAK,GAAA,GAAAkB,MAAA,CAAAlB,GAAA,mBAAA2B,oBAAAF,QAAA,EAAA9B,OAAA,QAAAsC,UAAA,GAAAtC,OAAA,CAAAgB,MAAA,EAAAA,MAAA,GAAAc,QAAA,CAAA3D,QAAA,CAAAmE,UAAA,OAAAzyB,SAAA,KAAAmxB,MAAA,SAAAhB,OAAA,CAAA8B,QAAA,qBAAAQ,UAAA,IAAAR,QAAA,CAAA3D,QAAA,CAAAoE,MAAA,KAAAvC,OAAA,CAAAgB,MAAA,aAAAhB,OAAA,CAAAK,GAAA,GAAAxwB,SAAA,EAAAmyB,mBAAA,CAAAF,QAAA,EAAA9B,OAAA,eAAAA,OAAA,CAAAgB,MAAA,kBAAAsB,UAAA,KAAAtC,OAAA,CAAAgB,MAAA,YAAAhB,OAAA,CAAAK,GAAA,OAAAmC,SAAA,uCAAAF,UAAA,iBAAA/B,gBAAA,MAAAgB,MAAA,GAAApB,QAAA,CAAAa,MAAA,EAAAc,QAAA,CAAA3D,QAAA,EAAA6B,OAAA,CAAAK,GAAA,mBAAAkB,MAAA,CAAA92B,IAAA,SAAAu1B,OAAA,CAAAgB,MAAA,YAAAhB,OAAA,CAAAK,GAAA,GAAAkB,MAAA,CAAAlB,GAAA,EAAAL,OAAA,CAAA8B,QAAA,SAAAvB,gBAAA,MAAAkC,IAAA,GAAAlB,MAAA,CAAAlB,GAAA,SAAAoC,IAAA,GAAAA,IAAA,CAAAJ,IAAA,IAAArC,OAAA,CAAA8B,QAAA,CAAAY,UAAA,IAAAD,IAAA,CAAAvyB,KAAA,EAAA8vB,OAAA,CAAAntB,IAAA,GAAAivB,QAAA,CAAAa,OAAA,eAAA3C,OAAA,CAAAgB,MAAA,KAAAhB,OAAA,CAAAgB,MAAA,WAAAhB,OAAA,CAAAK,GAAA,GAAAxwB,SAAA,GAAAmwB,OAAA,CAAA8B,QAAA,SAAAvB,gBAAA,IAAAkC,IAAA,IAAAzC,OAAA,CAAAgB,MAAA,YAAAhB,OAAA,CAAAK,GAAA,OAAAmC,SAAA,sCAAAxC,OAAA,CAAA8B,QAAA,SAAAvB,gBAAA,cAAAqC,aAAAC,IAAA,QAAAC,KAAA,KAAAC,MAAA,EAAAF,IAAA,YAAAA,IAAA,KAAAC,KAAA,CAAAE,QAAA,GAAAH,IAAA,WAAAA,IAAA,KAAAC,KAAA,CAAAG,UAAA,GAAAJ,IAAA,KAAAC,KAAA,CAAAI,QAAA,GAAAL,IAAA,WAAAM,UAAA,CAAAjxB,IAAA,CAAA4wB,KAAA,cAAAM,cAAAN,KAAA,QAAAvB,MAAA,GAAAuB,KAAA,CAAAO,UAAA,QAAA9B,MAAA,CAAA92B,IAAA,oBAAA82B,MAAA,CAAAlB,GAAA,EAAAyC,KAAA,CAAAO,UAAA,GAAA9B,MAAA,aAAAtB,QAAAL,WAAA,SAAAuD,UAAA,MAAAJ,MAAA,aAAAnD,WAAA,CAAApS,OAAA,CAAAoV,YAAA,cAAAU,KAAA,iBAAAre,OAAAse,QAAA,QAAAA,QAAA,QAAAC,cAAA,GAAAD,QAAA,CAAAzE,cAAA,OAAA0E,cAAA,SAAAA,cAAA,CAAAlD,IAAA,CAAAiD,QAAA,4BAAAA,QAAA,CAAA1wB,IAAA,SAAA0wB,QAAA,OAAA3zB,KAAA,CAAA2zB,QAAA,CAAA/0B,MAAA,SAAAyD,CAAA,OAAAY,IAAA,YAAAA,KAAA,aAAAZ,CAAA,GAAAsxB,QAAA,CAAA/0B,MAAA,OAAAiwB,MAAA,CAAA6B,IAAA,CAAAiD,QAAA,EAAAtxB,CAAA,UAAAY,IAAA,CAAA3C,KAAA,GAAAqzB,QAAA,CAAAtxB,CAAA,GAAAY,IAAA,CAAAwvB,IAAA,OAAAxvB,IAAA,SAAAA,IAAA,CAAA3C,KAAA,GAAAL,SAAA,EAAAgD,IAAA,CAAAwvB,IAAA,OAAAxvB,IAAA,YAAAA,IAAA,CAAAA,IAAA,GAAAA,IAAA,eAAAA,IAAA,EAAAgvB,UAAA,eAAAA,WAAA,aAAA3xB,KAAA,EAAAL,SAAA,EAAAwyB,IAAA,iBAAA7B,iBAAA,CAAAnC,SAAA,GAAAoC,0BAAA,EAAA9B,cAAA,CAAAmC,EAAA,mBAAA5wB,KAAA,EAAAuwB,0BAAA,EAAApB,YAAA,SAAAV,cAAA,CAAA8B,0BAAA,mBAAAvwB,KAAA,EAAAswB,iBAAA,EAAAnB,YAAA,SAAAmB,iBAAA,CAAAiD,WAAA,GAAAtE,MAAA,CAAAsB,0BAAA,EAAAxB,iBAAA,wBAAAV,OAAA,CAAAmF,mBAAA,aAAAC,MAAA,QAAAC,IAAA,wBAAAD,MAAA,IAAAA,MAAA,CAAAvF,WAAA,WAAAwF,IAAA,KAAAA,IAAA,KAAApD,iBAAA,6BAAAoD,IAAA,CAAAH,WAAA,IAAAG,IAAA,CAAA1gB,IAAA,OAAAqb,OAAA,CAAAsF,IAAA,aAAAF,MAAA,WAAAtgB,MAAA,CAAAygB,cAAA,GAAAzgB,MAAA,CAAAygB,cAAA,CAAAH,MAAA,EAAAlD,0BAAA,KAAAkD,MAAA,CAAAI,SAAA,GAAAtD,0BAAA,EAAAtB,MAAA,CAAAwE,MAAA,EAAA1E,iBAAA,yBAAA0E,MAAA,CAAAtF,SAAA,GAAAhb,MAAA,CAAA7C,MAAA,CAAAsgB,EAAA,GAAA6C,MAAA,KAAApF,OAAA,CAAAyF,KAAA,aAAA3D,GAAA,aAAAmB,OAAA,EAAAnB,GAAA,OAAAU,qBAAA,CAAAG,aAAA,CAAA7C,SAAA,GAAAc,MAAA,CAAA+B,aAAA,CAAA7C,SAAA,EAAAU,mBAAA,iCAAAR,OAAA,CAAA2C,aAAA,GAAAA,aAAA,EAAA3C,OAAA,CAAA0F,KAAA,aAAAxE,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,EAAAuB,WAAA,eAAAA,WAAA,KAAAA,WAAA,GAAA+C,OAAA,OAAAC,IAAA,OAAAjD,aAAA,CAAA1B,IAAA,CAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,GAAAuB,WAAA,UAAA5C,OAAA,CAAAmF,mBAAA,CAAAhE,OAAA,IAAAyE,IAAA,GAAAA,IAAA,CAAAtxB,IAAA,GAAA4uB,IAAA,WAAA3gB,MAAA,WAAAA,MAAA,CAAAuhB,IAAA,GAAAvhB,MAAA,CAAA5Q,KAAA,GAAAi0B,IAAA,CAAAtxB,IAAA,WAAAkuB,qBAAA,CAAAD,EAAA,GAAA3B,MAAA,CAAA2B,EAAA,EAAA7B,iBAAA,gBAAAE,MAAA,CAAA2B,EAAA,EAAAhC,cAAA,iCAAAK,MAAA,CAAA2B,EAAA,6DAAAvC,OAAA,CAAA1pB,IAAA,aAAAF,GAAA,QAAAyvB,MAAA,GAAA/gB,MAAA,CAAA1O,GAAA,GAAAE,IAAA,gBAAA1E,GAAA,IAAAi0B,MAAA,EAAAvvB,IAAA,CAAA3C,IAAA,CAAA/B,GAAA,UAAA0E,IAAA,CAAA/B,OAAA,aAAAD,KAAA,WAAAgC,IAAA,CAAArG,MAAA,SAAA2B,GAAA,GAAA0E,IAAA,CAAAwvB,GAAA,QAAAl0B,GAAA,IAAAi0B,MAAA,SAAAvxB,IAAA,CAAA3C,KAAA,GAAAC,GAAA,EAAA0C,IAAA,CAAAwvB,IAAA,OAAAxvB,IAAA,WAAAA,IAAA,CAAAwvB,IAAA,OAAAxvB,IAAA,QAAA0rB,OAAA,CAAAtZ,MAAA,GAAAA,MAAA,EAAAgb,OAAA,CAAA5B,SAAA,KAAAD,WAAA,EAAA6B,OAAA,EAAAqD,KAAA,WAAAA,MAAAgB,aAAA,aAAA/d,IAAA,WAAA1T,IAAA,WAAAovB,IAAA,QAAAC,KAAA,GAAAryB,SAAA,OAAAwyB,IAAA,YAAAP,QAAA,cAAAd,MAAA,gBAAAX,GAAA,GAAAxwB,SAAA,OAAAszB,UAAA,CAAA3V,OAAA,CAAA4V,aAAA,IAAAkB,aAAA,WAAAphB,IAAA,kBAAAA,IAAA,CAAAqhB,MAAA,OAAA9F,MAAA,CAAA6B,IAAA,OAAApd,IAAA,MAAAtT,KAAA,EAAAsT,IAAA,CAAA/R,KAAA,cAAA+R,IAAA,IAAArT,SAAA,MAAA20B,IAAA,WAAAA,KAAA,SAAAnC,IAAA,WAAAoC,UAAA,QAAAtB,UAAA,IAAAE,UAAA,kBAAAoB,UAAA,CAAAh6B,IAAA,QAAAg6B,UAAA,CAAApE,GAAA,cAAAqE,IAAA,KAAAvC,iBAAA,WAAAA,kBAAAwC,SAAA,aAAAtC,IAAA,QAAAsC,SAAA,MAAA3E,OAAA,kBAAA4E,OAAAC,GAAA,EAAAC,MAAA,WAAAvD,MAAA,CAAA92B,IAAA,YAAA82B,MAAA,CAAAlB,GAAA,GAAAsE,SAAA,EAAA3E,OAAA,CAAAntB,IAAA,GAAAgyB,GAAA,EAAAC,MAAA,KAAA9E,OAAA,CAAAgB,MAAA,WAAAhB,OAAA,CAAAK,GAAA,GAAAxwB,SAAA,KAAAi1B,MAAA,aAAA7yB,CAAA,QAAAkxB,UAAA,CAAA30B,MAAA,MAAAyD,CAAA,SAAAA,CAAA,QAAA6wB,KAAA,QAAAK,UAAA,CAAAlxB,CAAA,GAAAsvB,MAAA,GAAAuB,KAAA,CAAAO,UAAA,iBAAAP,KAAA,CAAAC,MAAA,SAAA6B,MAAA,aAAA9B,KAAA,CAAAC,MAAA,SAAAxc,IAAA,QAAAwe,QAAA,GAAAtG,MAAA,CAAA6B,IAAA,CAAAwC,KAAA,eAAAkC,UAAA,GAAAvG,MAAA,CAAA6B,IAAA,CAAAwC,KAAA,qBAAAiC,QAAA,IAAAC,UAAA,aAAAze,IAAA,GAAAuc,KAAA,CAAAE,QAAA,SAAA4B,MAAA,CAAA9B,KAAA,CAAAE,QAAA,gBAAAzc,IAAA,GAAAuc,KAAA,CAAAG,UAAA,SAAA2B,MAAA,CAAA9B,KAAA,CAAAG,UAAA,cAAA8B,QAAA,aAAAxe,IAAA,GAAAuc,KAAA,CAAAE,QAAA,SAAA4B,MAAA,CAAA9B,KAAA,CAAAE,QAAA,qBAAAgC,UAAA,YAAA7Y,KAAA,qDAAA5F,IAAA,GAAAuc,KAAA,CAAAG,UAAA,SAAA2B,MAAA,CAAA9B,KAAA,CAAAG,UAAA,YAAAb,MAAA,WAAAA,OAAA33B,IAAA,EAAA41B,GAAA,aAAApuB,CAAA,QAAAkxB,UAAA,CAAA30B,MAAA,MAAAyD,CAAA,SAAAA,CAAA,QAAA6wB,KAAA,QAAAK,UAAA,CAAAlxB,CAAA,OAAA6wB,KAAA,CAAAC,MAAA,SAAAxc,IAAA,IAAAkY,MAAA,CAAA6B,IAAA,CAAAwC,KAAA,wBAAAvc,IAAA,GAAAuc,KAAA,CAAAG,UAAA,QAAAgC,YAAA,GAAAnC,KAAA,aAAAmC,YAAA,iBAAAx6B,IAAA,mBAAAA,IAAA,KAAAw6B,YAAA,CAAAlC,MAAA,IAAA1C,GAAA,IAAAA,GAAA,IAAA4E,YAAA,CAAAhC,UAAA,KAAAgC,YAAA,cAAA1D,MAAA,GAAA0D,YAAA,GAAAA,YAAA,CAAA5B,UAAA,cAAA9B,MAAA,CAAA92B,IAAA,GAAAA,IAAA,EAAA82B,MAAA,CAAAlB,GAAA,GAAAA,GAAA,EAAA4E,YAAA,SAAAjE,MAAA,gBAAAnuB,IAAA,GAAAoyB,YAAA,CAAAhC,UAAA,EAAA1C,gBAAA,SAAA2E,QAAA,CAAA3D,MAAA,MAAA2D,QAAA,WAAAA,SAAA3D,MAAA,EAAA2B,QAAA,oBAAA3B,MAAA,CAAA92B,IAAA,QAAA82B,MAAA,CAAAlB,GAAA,qBAAAkB,MAAA,CAAA92B,IAAA,mBAAA82B,MAAA,CAAA92B,IAAA,QAAAoI,IAAA,GAAA0uB,MAAA,CAAAlB,GAAA,gBAAAkB,MAAA,CAAA92B,IAAA,SAAAi6B,IAAA,QAAArE,GAAA,GAAAkB,MAAA,CAAAlB,GAAA,OAAAW,MAAA,kBAAAnuB,IAAA,yBAAA0uB,MAAA,CAAA92B,IAAA,IAAAy4B,QAAA,UAAArwB,IAAA,GAAAqwB,QAAA,GAAA3C,gBAAA,KAAA4E,MAAA,WAAAA,OAAAlC,UAAA,aAAAhxB,CAAA,QAAAkxB,UAAA,CAAA30B,MAAA,MAAAyD,CAAA,SAAAA,CAAA,QAAA6wB,KAAA,QAAAK,UAAA,CAAAlxB,CAAA,OAAA6wB,KAAA,CAAAG,UAAA,KAAAA,UAAA,cAAAiC,QAAA,CAAApC,KAAA,CAAAO,UAAA,EAAAP,KAAA,CAAAI,QAAA,GAAAE,aAAA,CAAAN,KAAA,GAAAvC,gBAAA,OAAA6E,KAAA,WAAAC,OAAAtC,MAAA,aAAA9wB,CAAA,QAAAkxB,UAAA,CAAA30B,MAAA,MAAAyD,CAAA,SAAAA,CAAA,QAAA6wB,KAAA,QAAAK,UAAA,CAAAlxB,CAAA,OAAA6wB,KAAA,CAAAC,MAAA,KAAAA,MAAA,QAAAxB,MAAA,GAAAuB,KAAA,CAAAO,UAAA,kBAAA9B,MAAA,CAAA92B,IAAA,QAAA66B,MAAA,GAAA/D,MAAA,CAAAlB,GAAA,EAAA+C,aAAA,CAAAN,KAAA,YAAAwC,MAAA,gBAAAnZ,KAAA,8BAAAoZ,aAAA,WAAAA,cAAAhC,QAAA,EAAAb,UAAA,EAAAC,OAAA,gBAAAb,QAAA,KAAA3D,QAAA,EAAAlZ,MAAA,CAAAse,QAAA,GAAAb,UAAA,EAAAA,UAAA,EAAAC,OAAA,EAAAA,OAAA,oBAAA3B,MAAA,UAAAX,GAAA,GAAAxwB,SAAA,GAAA0wB,gBAAA,OAAAhC,OAAA;AxBDA,AyBOA,ADNA,EEMEoK,O1BPO3+B,A0BOA,AFNTw7B,CEMU1lB,IAAI,GAAG4oB,G1BPR1+B,CAAYC,A0BOA,C1BPAA,A0BOC6V,E1BPI5V,CAAAA,C0BOA,C1BPAA,A0BOCyS,CFN3B8oB,GAAA,CEMgC,CAAC,AFNjCpE,GEMoC,CAAC,CAAC,CAAC,CAAC,AFNxC,EAAAC,CEM2C,GAAG,EFN9C,CEMiDlxB,CFNjDs1B,GEMqD,CAACoD,CFNtD,EEMyD,AFNzDnD,CEM0D,CAAC,IFN3D,EAAAx1B,GAAA,EAAAkwB,GAAA,cAAAoC,IAAA,GAAAgD,GAAA,CAAAt1B,GAAA,EAAAkwB,GAAA,OAAAnwB,KAAA,GAAAuyB,IAAA,CAAAvyB,KAAA,WAAAuY,KAAA,IAAA6Y,MAAA,CAAA7Y,KAAA,iBAAAga,IAAA,CAAAJ,IAAA,IAAAhB,OAAA,CAAAnxB,KAAA,YAAAg0B,OAAA,CAAA7C,OAAA,CAAAnxB,KAAA,EAAAuxB,IAAA,CAAAiE,KAAA,EAAAC,MAAA;ACQA,ADRA,ExBD0Bz7B,A0BQxBw+B,IAAI,C1BPS,A0BOR9zB,C1BPQ,CyBQNuzB,ADRTvC,IxBAO17B,CAAAA,G0BOU,CAACS,C1BPMT,CAAAA,CyBQHi+B,CAAA,CzBRGj+B,CAAAA,AyBQA,CzBRAA,CACtB,CwBDFk2B,EAAA,CEO8B,CAACuI,OAAO,EAAED,IAAI,CAACK,WAAW,CAAC,CFPzDpJ,IAAA,SAAA3pB,IAAA,GAAA6vB,SAAA,aAAA3B,OAAA,WAAA7C,OAAA,EAAAC,MAAA,QAAAmE,GAAA,GAAArF,EAAA,CAAA0F,KAAA,CAAAnG,IAAA,EAAA3pB,IAAA,YAAA0vB,MAAAx1B,KAAA,IAAAs1B,kBAAA,CAAAC,GAAA,EAAApE,OAAA,EAAAC,MAAA,EAAAoE,KAAA,EAAAC,MAAA,UAAAz1B,KAAA,cAAAy1B,OAAApG,GAAA,IAAAiG,kBAAA,CAAAC,GAAA,EAAApE,OAAA,EAAAC,MAAA,EAAAoE,KAAA,EAAAC,MAAA,WAAApG,GAAA,KAAAmG,KAAA,CAAA71B,SAAA;AEQA,AFNA,ExBDE,AyBQA,EDPIk2B,ExBDA57B,CAAAA,GAAWD,CAAAA,CAAIC,MwBCD,ExBClB,CwBDqB;AEQvB,E1BPE,AyBOA,ADPE,EEOA6+B,E1BPG/+B,AyBOD,CzBPCA,EwBAI,ExBAuB,AwBArB,CACL,EEMM,GAAG,IAAI,C1BPa,IAAA,OAAbG,QAAAA,EAAnB;A0BQF,I1BNE,AyBME,ADNQ,IxBANC,CAAAA,A0BMG4+B,CDAC,ADNQ,ExBAL7+B,AwBAO,ECMN+hB,ICAI8c,CDAC,ACAD,AFNS,CxBAd7+B,AyBMK,CzBNIC,AyBMH,ACAE,I1BNCA,IAAQD,QAAAA,CAASE,oBAAAA,CAAqB,MAAA,CAAA,CAAQ,CAAA,CAAA;EyBOlE,ACAA,CDAC,CAAC,ADNQ,ExBANC,A0BMAy+B,C1BNAz+B,GAAQH,CyBMHm1B,GAAG,CDNS,CCMP,ACAA,CFNS,CxBAXn1B,A0BMI,C1BNKI,aAAAA,CAAc,OAAA,CACnCD;IAAAA,AyBME,ACAA,C1BNFA,CAAME,AwBAQ,ECMR29B,EzBNA39B,GAAO,CwBAS,CCMT,CDNW,ECMR,CAAC,EAAE,CDNW,CxBAjB,CyBMS80B,CzBJL,EyBIQ,CAAC8I,EzBJT,GyBIc,EzBJ3Bl+B,AyBI6Bm+B,CzBJ7Bn+B,IACEE,AyBGgC,CzBHhCA,AyBGiC,CzBH5BK,UAAAA,GACPL,CAAAA,CAAKM,YAAAA,CAAaJ,CAAAA,EAAOF,CAAAA,CAAKK,UAAAA,CAAAA,GAKhCL,CAAAA,CAAKO,WAAAA,CAAYL,CAAAA,AyBHmF,CzBGnFA,AyBHoF,EzBMnGA,CAAAA,CAAMM,UAAAA,GACRN,CAAAA,CAAMM,UAAAA,CAAWC,OAAAA,GAAUb,CAAAA,GAE3BM,CAAAA,CAAMK,WAAAA,CAAYR,QAAAA,CAASW,cAAAA,CAAed,CAAAA,CAAAA,CAAAA;EAAAA,A0BR5C,EDAE,EDNY,ECMRm+B,MDNgB,CCMT,CDNW,CCMT,ADLG,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM;AxBRoBn+B,E0BN5C++B,EFgBU,ECjBN,MCCM,CDDCT,ECCEW,QDDQ,CAACd,CCCC,CAAC,KDDK,CAAC,CAAC,CAAC,CAAC,GCCG;AzBjBtC,EuBkCQ,CAAC,CCjBL,ACCA,CFiBI,GEjBAe,CzBlBQn+B,CAAAA,CAAEC,CAAAA,CyBkBL,CzBlBWC,CAAAA,CyBkBRd,CzBlBQc,OyBkBA,CAACk+B,gBAAgB,CAAC,wBAAwB,CAAC;EzBlB3Cl+B,AwBkBtB,ECCE,AFiBQ,KvBnCY,AyBkBf,CFiBS,EAAE,CEjBP+G,CAAC,GzBlBU,AyBkBP,CAAC,AFiBQ,EEjBNA,CzBlBI,AyBkBH,GAAGk3B,IzBlBTl+B,CAAAA,AyBkBc,CAACuD,EzBlBfvD,CAAoBC,CAAAA,EyBkBC,EzBlBMd,AyBkBJ6H,CAAC,EAAE,EAAE,GzBlBD7H,EAAUe,aAAAA,CAAcF,CAAAA,CAAAA,GAAQA,CAAAA,IAAQ,IAAA;AAAA,EwBmBhF,EDiBU,EEjBN,GDAG,CCACu9B,EDAE,GDiBW,CEjBP,CAACD,AFiBQ,UEjBE,CAACY,KAAK,CAACl3B,CAAC,CAAC,CAAC6N,IAAI,CAAC,KAAK0oB,MAAM,CAACL,YAAY,CAAC,CAAC,EAAE;AzByBtE,AwBxBA,MDiBgB,EEjBRM,CzBwBQr9B,KuBPQ,EAAE,EvBOVA,AyBxBE,CzBwBQC,AyBxBP89B,CzBwBO99B,EAAAA,AuBPM,EEjBR,CAAC4G,CAAC,CAAC,CAAC;ADE5B,ExBsB0B5G,IACrBC,AyBxBC,AFiBU,CvBOXA,EwBvBIi9B,CxBuBGl9B,CAAAA,CAAQE,EuBPI,EAAE,CACN,ECjBDg9B,CAAC5oB,EDiBK,CCjBF,EAAE,QxBuBLpU,CAAAA,CAAAA;EAAAA,AwBtBlB,ECDE,AFmBQ,KvBIQA,AwBtBX,CAAC,EAAE,GAAGoU,GAAG,EAAE6b,OAAO,CAAC,gFAAgF,EAAE,IAAI,CAAC,GAAG,GAAG;AACzH,EDkBQ,CAAC,CvBGWjwB,AyBrBhBy9B,CFmBI,EvBEYz9B,EAKbD,CAAAA,CAAKE,GAAAA,AyB1BE,GAAG,CzB0BEpB,GyB1BE,KzB0BFA,CAASqB,eAAAA,CAAgBC,SAAAA,IAAatB,QAAAA,CAASuB,IAAAA,CAAKD,SAAAA,CAAAA;AwBxBvE6yB,ECDE,CAAC,CzByBoE7yB,AuBN3D,CEnBP,EDCE,ACDA,CzByBgEA,AwBxB/Dy8B,ACDA,EzB0BA78B,AuBPU,CvBOVA,CAAKM,AuBPO,IvBOPA,IAAQxB,AwBzBD,ADkBQ,GClBL89B,KxByBF99B,CAASqB,YwBzBW,GxByBXA,CAAgBI,UAAAA,IAAczB,QAAAA,CAASuB,IAAAA,CAAKE,UAAAA;AwBxB1E0yB,ACDA,EzByB0E1yB,CAAAA,CuBN9D,GClBL,CAAC08B,ODkBe,EAAE,CClBP,GAAGA,UAAU;AxBwB2C18B,AyBvB1Ew9B,MAAM,AFkBU,CElBT9K,OAAO,AFkBU,EAAE,CElBT0K,KFkBe,IElBN;AzB8B1B,MuBXgB,GvBWAn9B,KuBXQ,EAAE,CvBWVA,AuBVI,CvBUKC,CAAAA,EAAAA,EuBVC;EvBUDA,EuBRb,KvBSiB,IAAA,KAApBA,CAAAA,CAAGC,YAAAA;AAAAA,EuBRJ,CAAC,CACJ;AvBUL,EuBTI,OvBSYC,GuBT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","file":"newchart.7d3bc89a.js","sourceRoot":"..","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nexport function isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif(!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass='active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif(index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t});\n\n\t$child.classList.add(activeClass);\n}\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const AXIS_LEGEND_BAR_SIZE = 100;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nexport const PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n","import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n\tconst range = max - min;\n\tconst biasValue = range * bias + min;\n\tvar rnd = Math.random() * range + min,\t\t// random in range\n\t\tmix = Math.random() * influence;\t\t// random mixer\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nexport function isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nexport function round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n export function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len-3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nexport function shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet\tl = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened*100)/100 + ' ' + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by François Romain)\nexport function getSplineCurvePointsStr(xList, yList) {\n\n\tlet points=[];\n\tfor(let i=0;i<xList.length;i++){\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n    \n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n    \n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n    \n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n    \n\treturn pointStr(points, bezierCommand);\n}\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nexport const getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import { getBarHeightAndYAttr, truncateString, shortenLargeNumber, getSplineCurvePointsStr } from './draw-utils';\nimport { getStringWidth, isValidNumber } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR, PERCENTAGE_BAR_DEFAULT_DEPTH } from './constants';\nimport { lightenDarkenColor } from './colors';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 15;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst FONT_FILL = '#555b51';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(className, transform='', parent=undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif(parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none', strokeWidth=2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function percentageBar(x, y, width, height,\n\tdepth=PERCENTAGE_BAR_DEFAULT_DEPTH, fill='none') {\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill,\n\t\tstyles: {\n\t\t\t'stroke': lightenDarkenColor(fill, -25),\n\t\t\t// Diabolically good: https://stackoverflow.com/a/9000859\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n\t\t\t'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\n\t\t\t'stroke-width': depth\n\t\t},\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function heatSquare(className, x, y, size, radius, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function legendBar(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-bar',\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: size,\n\t\theight: '2px',\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE * 2) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function legendDot(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tcx: 0,\n\t\tcy: 0,\n\t\tr: size,\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdx: (FONT_SIZE) + 'px',\n\t\tdy: (FONT_SIZE/3) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"circle\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || FONT_FILL;\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tif (options.shortenNumbers) label = shortenLargeNumber(label);\n\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType,\n\t\tshortenNumbers: options.shortenNumbers\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif (!isValidNumber(x)) x = 0;\n\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label, options={}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif(height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\t// Preprocess numbers to avoid svg building errors\n\tif (!isValidNumber(x)) x = 0;\n\tif (!isValidNumber(y)) y = 0;\n\tif (!isValidNumber(height, true)) height = 0;\n\tif (!isValidNumber(width, true)) width = 0;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n","import { getBarHeightAndYAttr, getSplineCurvePointsStr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, {d:\"M\" + pointsStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pointsStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\t\t\n\t\tif (parent) {\n\t\t\tparent.replaceChild(animElement, unit);\n\t\t}\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tif (animElement[1]) {\n\t\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\t\telements[i][0] = newElements[i];\n\t\t}\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { $ } from '../utils/dom';\nimport { CSSTEXT } from '../../css/chartsCss';\n\nexport function downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function(){\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nexport function prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n","// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\"Thursday\", \"Friday\", \"Saturday\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime()/NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif(roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport { makeText, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\nimport { getMonthName } from '../utils/date-utils';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos, shortenNumbers: this.constants.shortenNumbers})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {index, colWidth, rowHeight, squareSize, radius, xTranslate} = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif(weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n\treturn val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tif(allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif(isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength/allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(i % seriesMultiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n","import '../css/charts.scss';\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\nimport DonutChart from './charts/DonutChart';\n\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };","import { $ } from '../utils/dom';\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth, isHidden } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\nimport { BASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { downloadFile, prepareForExport } from '../utils/export';\nimport { deepClone } from  '../utils/helpers';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\t\t// deepclone options to avoid making changes to orignal object\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1, // calculate\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif(!this.title.length) { m.titleHeight = 0; }\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif(this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() {} // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif(this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, this.config.animate);\n\t\tthis.renderLegend();\n\t}\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { truncateString } from '../utils/draw-utils';\nimport { legendDot } from '../utils/draw';\nimport { round } from '../utils/helpers';\nimport { getExtraWidth } from '../utils/constants';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet count = 0;\n\t\tlet y = 0;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tlet barWidth = 150;\n\t\t\tlet divisor = Math.floor(\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\n\t\t\t);\n\t\t\tif (this.legendTotals.length < divisor) {\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\n\t\t\t}\n\t\t\tif(count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += 20;\n\t\t\t}\n\t\t\tlet x = barWidth * count + 5;\n\t\t\tlet label = this.config.truncateLegends ? truncateString(s.labels[i], barWidth/10) : s.labels[i];\n\t\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(d) : d;\n\t\t\tlet dot = legendDot(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t5,\n\t\t\t\tthis.colors[i],\n\t\t\t\t`${label}: ${formatted}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, PERCENTAGE_BAR_DEFAULT_DEPTH } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n\t\tm.paddings.right = 30;\n\t\tm.legendHeight = 60;\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t\tbarDepth: this.barOptions.depth,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif(bars.includes(bar)) {\n\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr, makeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeCircleStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: makeArcPathStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeText, heatSquare } from '../utils/draw';\nimport { DAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { getExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif(daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { AXIS_LEGEND_BAR_SIZE } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendBar } from '../utils/draw';\nimport { getTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\n\tLINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif(this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name && d.name.replace(/<|>|&/g, (char) => char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'),\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\tspline: this.lineOptions.spline,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif(relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY >  getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{name: dbi.formattedLabel, value: ''},\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif(s.datasets.length > 1) {\n\t\t\tthis.legendArea.textContent = '';\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name,\n\t\t\t\t\tthis.config.truncateLegends);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class DonutChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'donut';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius =\n\t\t\tthis.height > this.width\n\t\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeStrokeCircleStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc)\n\t\t\t\t\t: makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'donutSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{ radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.stroke = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('donutSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import \"./styles.css\";\r\nimport { Chart } from \"frappe-charts/dist/frappe-charts.min.esm\";\r\n\r\nconst jsonQueryBirth = {\r\n    \"query\": [\r\n        {\r\n            \"code\": \"Vuosi\",\r\n            \"selection\": {\r\n                \"filter\": \"item\",\r\n                \"values\": [\r\n                    \"2000\",\r\n                    \"2001\",\r\n                    \"2002\",\r\n                    \"2003\",\r\n                    \"2004\",\r\n                    \"2005\",\r\n                    \"2006\",\r\n                    \"2007\",\r\n                    \"2008\",\r\n                    \"2009\",\r\n                    \"2010\",\r\n                    \"2011\",\r\n                    \"2012\",\r\n                    \"2013\",\r\n                    \"2014\",\r\n                    \"2015\",\r\n                    \"2016\",\r\n                    \"2017\",\r\n                    \"2018\",\r\n                    \"2019\",\r\n                    \"2020\",\r\n                    \"2021\"\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"code\": \"Alue\",\r\n            \"selection\": {\r\n                \"filter\": \"item\",\r\n                \"values\": [\r\n                    \"SSS\"\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"code\": \"Tiedot\",\r\n            \"selection\": {\r\n                \"filter\": \"item\",\r\n                \"values\": [\r\n                    \"vm01\"\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"response\": {\r\n        \"format\": \"json-stat2\"\r\n    }\r\n}\r\n\r\nconst jsonQueryDeath = {\r\n    \"query\": [\r\n        {\r\n            \"code\": \"Vuosi\",\r\n            \"selection\": {\r\n                \"filter\": \"item\",\r\n                \"values\": [\r\n                    \"2000\",\r\n                    \"2001\",\r\n                    \"2002\",\r\n                    \"2003\",\r\n                    \"2004\",\r\n                    \"2005\",\r\n                    \"2006\",\r\n                    \"2007\",\r\n                    \"2008\",\r\n                    \"2009\",\r\n                    \"2010\",\r\n                    \"2011\",\r\n                    \"2012\",\r\n                    \"2013\",\r\n                    \"2014\",\r\n                    \"2015\",\r\n                    \"2016\",\r\n                    \"2017\",\r\n                    \"2018\",\r\n                    \"2019\",\r\n                    \"2020\",\r\n                    \"2021\"\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"code\": \"Alue\",\r\n            \"selection\": {\r\n                \"filter\": \"item\",\r\n                \"values\": [\r\n                    \"SSS\"\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"code\": \"Tiedot\",\r\n            \"selection\": {\r\n                \"filter\": \"item\",\r\n                \"values\": [\r\n                    \"vm11\"\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"response\": {\r\n        \"format\": \"json-stat2\"\r\n    }\r\n}\r\n\r\nlet chartData = [];\r\nlet chart = null;\r\n\r\nasync function showData () {\r\n    const queryString = new URLSearchParams(window.location.search);\r\n    let areaCode = queryString.get(\"area\");\r\n    areaCode = areaCode.replaceAll(\"'\", '');\r\n//    let queryString = window.location.search;\r\n    const url1 = \"https://statfin.stat.fi/PxWeb/api/v1/en/StatFin/synt/statfin_synt_pxt_12dy.px\";\r\n    const res2 = await fetch(url1);\r\n    const data2 = await res2.json();\r\n    let i = 0;\r\n    if (!areaCode) return;\r\n\r\n    let area = \"\";\r\n    data2.variables[1].values.forEach((mun) => {\r\n        if (mun == areaCode) {\r\n            area = data2.variables[1].valueTexts[i];\r\n            return;\r\n        }\r\n        i++;\r\n    });\r\n    if (!area) return;\r\n\r\n    jsonQueryBirth.query[1].selection.values[0] = areaCode;\r\n    let res = await fetch(url1, {\r\n        method: \"POST\",\r\n        headers: {\"content-type\": \"application/json\"},\r\n        body: JSON.stringify(jsonQueryBirth)\r\n    });\r\n    if (!res.ok) return;\r\n    const data1 = await res.json();\r\n\r\n    jsonQueryDeath.query[1].selection.values[0] = areaCode;\r\n    res = await fetch(url1, {\r\n        method: \"POST\",\r\n        headers: {\"content-type\": \"application/json\"},\r\n        body: JSON.stringify(jsonQueryDeath)\r\n    });\r\n    if (!res.ok) return;\r\n    const data3 = await res.json();\r\n\r\n\r\n    chartData = {\r\n        labels: Object.values(data1.dimension.Vuosi.category.label),\r\n        datasets: [\r\n            {\r\n                name: \"Births\",\r\n                values: data1.value\r\n            },\r\n            {\r\n                name: \"Deaths\",\r\n                values: data3.value\r\n            }\r\n        ]\r\n    }\r\n//  console.log(chartData);\r\n\r\n    chart = new Chart(\"#chart\", {\r\n        title: `Births and deaths in ${area}`,\r\n        data: chartData,\r\n        type: \"bar\",\r\n        height: 450,\r\n        colors: [\"#63d0ff\", \"#363636\"]\r\n    });\r\n}\r\n\r\nshowData();\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}